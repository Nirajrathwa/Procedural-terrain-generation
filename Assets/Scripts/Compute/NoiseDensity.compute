#pragma kernel Density
#include "/Include/Noise.compute"

static const int numThreads = 8;

RWStructuredBuffer<float4> points;
int numPointsPerAxis;
float boundsSize;
float3 centre;
float spacing;
float3 worldSize;

int indexFromCoord(uint x, uint y, uint z) {
    return z * numPointsPerAxis * numPointsPerAxis + y * numPointsPerAxis + x;
}


void Density (int3 id : sv_dispatchThreadID) {
	if (id.x >= numPointsPerAxis || id.y >= numPointsPerAxis || id.z >= numPointsPerAxis) {
		return;
	}

	float3 pos = centre + id * spacing - boundsSize/2;

	float spaceVal = -pos.y;

	points[index] = float4(pos, spaceVal);

}